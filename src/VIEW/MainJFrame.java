/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

/**
 *
 * @author damir
 */
import CONTROLLER.FileTools.ReadForExpansion;
import CONTROLLER.FileTools.ReadLines;
import java.io.File;
import CONTROLLER.Parser.parser;
import CONTROLLER.FileTools.dirTool;
import CONTROLLER.FileTools.sortFilesByClass;
import CONTROLLER.FindCompare.CompareSentences;
import CONTROLLER.FindCompare.Finder;
import CONTROLLER.FindCompare.Metrics;
import CONTROLLER.Summarizer.*;
import CONTROLLER.classifier.classify;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;

public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseFile = new javax.swing.JFileChooser();
        notLoaded = new javax.swing.JDialog();
        jButton4 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();
        noFile = new javax.swing.JDialog();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        DeleteAll = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        knowledgeBase_Tab = new javax.swing.JTabbedPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        knowledgeBase_SelectFileButton = new javax.swing.JButton();
        knowledgeBase_SelectDirButton = new javax.swing.JButton();
        knowledgeBase_ShowFilename = new javax.swing.JTextField();
        knowledgeBase_TextLabel2 = new javax.swing.JLabel();
        knowledgeBase_TextLabel1 = new javax.swing.JLabel();
        knowledgeBase_Progress = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        knowledgeBase_TextArea = new javax.swing.JTextArea();
        knowledgeBase_TextLabel3 = new javax.swing.JLabel();
        knowledgeBase_SelectSubDirs = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        knowledgeBase_fileProgress = new javax.swing.JProgressBar();
        jButton2 = new javax.swing.JButton();
        MISC_OpenKnowledge = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        classifyData_Label1 = new javax.swing.JLabel();
        classifyData_Progress1 = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        classifyData_TextArea = new javax.swing.JTextArea();
        classifyData_Button1 = new javax.swing.JButton();
        classifyData_Label2 = new javax.swing.JLabel();
        classifyData_Spinner = new javax.swing.JSpinner();
        classifyData_Button2 = new javax.swing.JButton();
        classifyData_Slider = new javax.swing.JSlider();
        jSeparator2 = new javax.swing.JSeparator();
        classifyData_Progress2 = new javax.swing.JProgressBar();
        jSeparator5 = new javax.swing.JSeparator();
        filter_label = new javax.swing.JLabel();
        filter_Spinner = new javax.swing.JSpinner();
        filter_button = new javax.swing.JButton();
        filter_progress = new javax.swing.JProgressBar();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        expand_TextArea = new javax.swing.JTextArea();
        expand_Label = new javax.swing.JLabel();
        expand_Slider = new javax.swing.JSlider();
        expand_Button = new javax.swing.JButton();
        expand_CheckBox = new javax.swing.JCheckBox();
        expand_ProgressBar = new javax.swing.JProgressBar();
        expand_Spinner = new javax.swing.JSpinner();
        expand_Label2 = new javax.swing.JLabel();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        finalize_TextArea = new javax.swing.JTextArea();
        finalize_Label2 = new javax.swing.JLabel();
        finalize_Spinner = new javax.swing.JSpinner();
        finalize_Button2 = new javax.swing.JButton();
        finalize_ProgressBar = new javax.swing.JProgressBar();
        finalize_Label1 = new javax.swing.JLabel();
        finalize_TextField = new javax.swing.JTextField();
        finalize_Button1 = new javax.swing.JButton();
        finalize_CheckBox = new javax.swing.JCheckBox();
        summarizer_ProgressBar = new javax.swing.JProgressBar();
        summarizer_CheckBox = new javax.swing.JCheckBox();
        summarizer_Button2 = new javax.swing.JButton();
        summarizer_Spinner = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        summarizer_TextField = new javax.swing.JTextField();
        summarizer_Button = new javax.swing.JButton();
        summarizer_Label = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();

        notLoaded.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        notLoaded.setTitle("Data not loaded WARNING!");
        notLoaded.setAlwaysOnTop(true);
        notLoaded.setMinimumSize(new java.awt.Dimension(400, 316));
        notLoaded.setResizable(false);

        jButton4.setText("OK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText("WARNING:\n\nYou have not selected the file you wish to expand! Please go to the Load Data to Knowledge Base tab, and select the TXT file you wish to expand. This allows the algorithm to learn your input and process other data accordingly.");
        jTextArea5.setWrapStyleWord(true);
        jScrollPane8.setViewportView(jTextArea5);

        javax.swing.GroupLayout notLoadedLayout = new javax.swing.GroupLayout(notLoaded.getContentPane());
        notLoaded.getContentPane().setLayout(notLoadedLayout);
        notLoadedLayout.setHorizontalGroup(
            notLoadedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notLoadedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
            .addGroup(notLoadedLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jButton4)
                .addContainerGap(181, Short.MAX_VALUE))
        );
        notLoadedLayout.setVerticalGroup(
            notLoadedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notLoadedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                .addGap(52, 52, 52)
                .addComponent(jButton4)
                .addGap(58, 58, 58))
        );

        noFile.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        noFile.setMinimumSize(new java.awt.Dimension(400, 300));
        noFile.setResizable(false);

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jTextArea6.setText("WARNING:\n\nYou need to Select the file first.");
        jTextArea6.setWrapStyleWord(true);
        jScrollPane9.setViewportView(jTextArea6);

        jButton5.setText("OK");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout noFileLayout = new javax.swing.GroupLayout(noFile.getContentPane());
        noFile.getContentPane().setLayout(noFileLayout);
        noFileLayout.setHorizontalGroup(
            noFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9)
                .addContainerGap())
            .addGroup(noFileLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jButton5)
                .addContainerGap(181, Short.MAX_VALUE))
        );
        noFileLayout.setVerticalGroup(
            noFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addGap(52, 52, 52)
                .addComponent(jButton5)
                .addGap(58, 58, 58))
        );

        DeleteAll.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        DeleteAll.setMinimumSize(new java.awt.Dimension(352, 300));

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("ARE YOU SURE?\n\nPressing YES will delete entire Knowledge Base folder. This action cannot be undone.");
        jTextArea2.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea2);

        jButton8.setText("YES");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("CANCEL");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DeleteAllLayout = new javax.swing.GroupLayout(DeleteAll.getContentPane());
        DeleteAll.getContentPane().setLayout(DeleteAllLayout);
        DeleteAllLayout.setHorizontalGroup(
            DeleteAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteAllLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DeleteAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addGroup(DeleteAllLayout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        DeleteAllLayout.setVerticalGroup(
            DeleteAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteAllLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(DeleteAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        knowledgeBase_SelectFileButton.setText("Select File...");
        knowledgeBase_SelectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knowledgeBase_SelectFileButtonActionPerformed(evt);
            }
        });

        knowledgeBase_SelectDirButton.setText("Select Directory...");
        knowledgeBase_SelectDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knowledgeBase_SelectDirButtonActionPerformed(evt);
            }
        });

        knowledgeBase_ShowFilename.setEditable(false);
        knowledgeBase_ShowFilename.setBackground(new java.awt.Color(255, 255, 255));
        knowledgeBase_ShowFilename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knowledgeBase_ShowFilenameActionPerformed(evt);
            }
        });

        knowledgeBase_TextLabel2.setText("Select a directory with TXT files, or a TXT file to add to a Knowledge Base:");

        knowledgeBase_TextLabel1.setText("Select a TXT file to expand:");

        knowledgeBase_Progress.setStringPainted(true);

        knowledgeBase_TextArea.setEditable(false);
        knowledgeBase_TextArea.setColumns(20);
        knowledgeBase_TextArea.setLineWrap(true);
        knowledgeBase_TextArea.setRows(5);
        knowledgeBase_TextArea.setText("Select a TXT file you wish to expand, then select a directory that contains all TXT files you wish to expand it with. Expander will pre-process the inputs, and store them into a temporary directory, creating the knowledge-base. ");
        knowledgeBase_TextArea.setWrapStyleWord(true);
        knowledgeBase_TextArea.setBorder(null);
        knowledgeBase_TextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(knowledgeBase_TextArea);

        knowledgeBase_TextLabel3.setForeground(new java.awt.Color(153, 0, 255));
        knowledgeBase_TextLabel3.setText("Tip: To add more directories, simply select another directory.");

        knowledgeBase_SelectSubDirs.setText("Include Sub-Directories");
        knowledgeBase_SelectSubDirs.setOpaque(false);
        knowledgeBase_SelectSubDirs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knowledgeBase_SelectSubDirsActionPerformed(evt);
            }
        });

        knowledgeBase_fileProgress.setStringPainted(true);

        jButton2.setText("Select File...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        MISC_OpenKnowledge.setText("Open Knowledge Base");
        MISC_OpenKnowledge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MISC_OpenKnowledgeActionPerformed(evt);
            }
        });

        jLabel5.setText("Open the Knowledge Base Directory:");

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(knowledgeBase_SelectDirButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 333, Short.MAX_VALUE)
                        .addComponent(knowledgeBase_SelectSubDirs))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(knowledgeBase_SelectFileButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(knowledgeBase_ShowFilename))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(knowledgeBase_TextLabel2)
                            .addComponent(knowledgeBase_Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(knowledgeBase_TextLabel3)
                            .addComponent(knowledgeBase_TextLabel1)
                            .addComponent(knowledgeBase_fileProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(MISC_OpenKnowledge))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(knowledgeBase_TextLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knowledgeBase_SelectFileButton)
                    .addComponent(knowledgeBase_ShowFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knowledgeBase_fileProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(knowledgeBase_TextLabel2)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(knowledgeBase_SelectDirButton)
                    .addComponent(jButton2)
                    .addComponent(knowledgeBase_SelectSubDirs, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knowledgeBase_Progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(knowledgeBase_TextLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MISC_OpenKnowledge)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(knowledgeBase_SelectFileButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_SelectDirButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_ShowFilename, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_TextLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_TextLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_Progress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_TextLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_SelectSubDirs, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(knowledgeBase_fileProgress, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(MISC_OpenKnowledge, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        knowledgeBase_Tab.addTab("Load Data to Knowledge Base", jLayeredPane1);

        classifyData_Label1.setText("Select classification threshold:");

        classifyData_Progress1.setStringPainted(true);

        classifyData_TextArea.setEditable(false);
        classifyData_TextArea.setColumns(20);
        classifyData_TextArea.setLineWrap(true);
        classifyData_TextArea.setRows(5);
        classifyData_TextArea.setText("This step is used to narrow-down the amount of documents in a knowledge-base by letting it decide which TXT files to use.\nSelect the threshold of classification by using the slider. The greater number yields documents with greater similarities, but a smaller knowledge base.\nIf you do not know which threshold to use, you can also narow it down to any number of best results. \n\nTo speed-up the expansion, you can select the maximum amount of sentences to extract/summarize from each TXT file within a knowledge base.\nThese sentences are the most-relevant sentences in comparison to the content of a TXT file you wish to expand.\nWhile expanding, only extracted sentences will be inserted into a resulting text.");
        classifyData_TextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(classifyData_TextArea);

        classifyData_Button1.setText("Start Classifying");
        classifyData_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyData_Button1ActionPerformed(evt);
            }
        });

        classifyData_Label2.setText("Select the number of best TXT files to remain:");

        classifyData_Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(1), null, Integer.valueOf(1)));
        classifyData_Spinner.setToolTipText("");
        classifyData_Spinner.setMinimumSize(new java.awt.Dimension(25, 25));

        classifyData_Button2.setText("Start Classifying");
        classifyData_Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyData_Button2ActionPerformed(evt);
            }
        });

        classifyData_Slider.setMajorTickSpacing(10);
        classifyData_Slider.setMinorTickSpacing(10);
        classifyData_Slider.setPaintLabels(true);
        classifyData_Slider.setPaintTicks(true);
        classifyData_Slider.setToolTipText("Select cut-off");
        classifyData_Slider.setValue(70);
        classifyData_Slider.setAutoscrolls(true);
        classifyData_Slider.setDoubleBuffered(true);
        classifyData_Slider.setName(""); // NOI18N
        classifyData_Slider.setOpaque(false);

        classifyData_Progress2.setStringPainted(true);

        filter_label.setText("Maximum number of sentences per knowledge-base document:");

        filter_Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(0), null, Integer.valueOf(1)));

        filter_button.setText("Summarize knowledge-base");
        filter_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_buttonActionPerformed(evt);
            }
        });

        filter_progress.setStringPainted(true);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classifyData_Label1)
                            .addComponent(classifyData_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classifyData_Button1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(classifyData_Progress1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addComponent(classifyData_Label2)
                                .addGap(0, 382, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(classifyData_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classifyData_Button2))
                    .addComponent(jSeparator5)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                                .addComponent(filter_label)
                                .addGap(0, 245, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(filter_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filter_button))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filter_progress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classifyData_Progress2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jLayeredPane2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {classifyData_Progress1, classifyData_Progress2});

        jLayeredPane2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {classifyData_Button1, classifyData_Button2});

        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(classifyData_Label1)
                .addGap(11, 11, 11)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(classifyData_Button1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(classifyData_Progress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(classifyData_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classifyData_Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classifyData_Button2)
                    .addComponent(classifyData_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(classifyData_Progress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filter_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filter_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filter_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filter_progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
        jLayeredPane2.setLayer(classifyData_Label1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Progress1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Button1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Label2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Spinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Button2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Slider, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(classifyData_Progress2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jSeparator5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(filter_label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(filter_Spinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(filter_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(filter_progress, javax.swing.JLayeredPane.DEFAULT_LAYER);

        knowledgeBase_Tab.addTab("Classify/Filter Data", jLayeredPane2);

        expand_TextArea.setColumns(20);
        expand_TextArea.setLineWrap(true);
        expand_TextArea.setRows(5);
        expand_TextArea.setText("Not all results are good results. For this reason, you should filter out the possibility of getting the bad results with the Mimimum Similarity Allowed slider. Lower number implies more results, but also the greater possibility of outputting the false-positives. As soon as you press the Expand button you will be asked where to save the final result. Open this file in any text-editing software to monitor the progress as the expander data-mines and inserts the text.");
        expand_TextArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(expand_TextArea);

        expand_Label.setText("Select the Minimum Similarity Allowed:");

        expand_Slider.setMajorTickSpacing(10);
        expand_Slider.setMinorTickSpacing(10);
        expand_Slider.setPaintLabels(true);
        expand_Slider.setPaintTicks(true);
        expand_Slider.setToolTipText("Minumum Similarity");
        expand_Slider.setOpaque(false);

        expand_Button.setText("Expand");
        expand_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expand_ButtonActionPerformed(evt);
            }
        });

        expand_CheckBox.setText("Write references to output");

        expand_ProgressBar.setStringPainted(true);

        expand_Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(0), null, Integer.valueOf(1)));

        expand_Label2.setText("Select the maximum number of sentences to insert between the lines:");

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(expand_Slider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(expand_Label)
                                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                        .addComponent(expand_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(expand_Label2)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(expand_CheckBox))
                            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(expand_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(expand_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 214, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(expand_Label)
                .addGap(18, 18, 18)
                .addComponent(expand_Slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(expand_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expand_Label2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(expand_CheckBox)
                .addGap(42, 42, 42)
                .addComponent(expand_Button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expand_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jLayeredPane4.setLayer(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_Slider, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_Button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_CheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_ProgressBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_Spinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(expand_Label2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        knowledgeBase_Tab.addTab("Expand", jLayeredPane4);

        finalize_TextArea.setEditable(false);
        finalize_TextArea.setColumns(20);
        finalize_TextArea.setLineWrap(true);
        finalize_TextArea.setRows(5);
        finalize_TextArea.setText("This summarizes the Expanded (or any other) text to a defined maximum number of sentences, having the original document used for expanding previously loaded under the Load Data to Knowledge Base tab. Please remove any footnote references added by expander, and use any DIFF tool to manually complete the finalizing after this step.");
        finalize_TextArea.setWrapStyleWord(true);
        jScrollPane5.setViewportView(finalize_TextArea);

        finalize_Label2.setText("Finalize to a maximum number of sentences:");

        finalize_Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(0), null, Integer.valueOf(1)));

        finalize_Button2.setText("Finalize");
        finalize_Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalize_Button2ActionPerformed(evt);
            }
        });

        finalize_ProgressBar.setStringPainted(true);

        finalize_Label1.setText("Select the TXT file to Finalize:");

        finalize_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalize_TextFieldActionPerformed(evt);
            }
        });

        finalize_Button1.setText("Select File...");
        finalize_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalize_Button1ActionPerformed(evt);
            }
        });

        finalize_CheckBox.setText("Open in a default Text Editor");
        finalize_CheckBox.setOpaque(false);
        finalize_CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalize_CheckBoxActionPerformed(evt);
            }
        });

        summarizer_ProgressBar.setStringPainted(true);

        summarizer_CheckBox.setText("Open in a default editor");
        summarizer_CheckBox.setOpaque(false);
        summarizer_CheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summarizer_CheckBoxActionPerformed(evt);
            }
        });

        summarizer_Button2.setText("Summarize");
        summarizer_Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summarizer_Button2ActionPerformed(evt);
            }
        });

        summarizer_Spinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(1), null, Integer.valueOf(1)));

        jLabel4.setText("Summarize to a maximum number of sentences:");

        summarizer_TextField.setEditable(false);
        summarizer_TextField.setBackground(new java.awt.Color(255, 255, 255));
        summarizer_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summarizer_TextFieldActionPerformed(evt);
            }
        });

        summarizer_Button.setText("Select File...");
        summarizer_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summarizer_ButtonActionPerformed(evt);
            }
        });

        summarizer_Label.setText("Select the TXT to summarize:");

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                        .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                .addComponent(finalize_Button1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(finalize_TextField))
                            .addComponent(jScrollPane5)
                            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(finalize_Label2)
                                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                        .addComponent(finalize_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(finalize_Button2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(finalize_CheckBox)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                        .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                .addComponent(summarizer_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(summarizer_Button2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(summarizer_CheckBox))
                            .addComponent(summarizer_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(392, 419, Short.MAX_VALUE))
                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                        .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                .addComponent(summarizer_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(summarizer_TextField))
                            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(finalize_Label1)
                                    .addComponent(finalize_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(summarizer_Label))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane5Layout.createSequentialGroup()
                        .addComponent(jSeparator4)
                        .addContainerGap())))
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(finalize_Label1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalize_Button1)
                    .addComponent(finalize_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(finalize_Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalize_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finalize_Button2)
                    .addComponent(finalize_CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalize_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(summarizer_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(summarizer_Button)
                    .addComponent(summarizer_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(summarizer_Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(summarizer_Button2)
                    .addComponent(summarizer_CheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(summarizer_ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jLayeredPane5.setLayer(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_Label2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_Spinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_Button2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_ProgressBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_Label1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_TextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_Button1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(finalize_CheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_ProgressBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_CheckBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_Button2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_Spinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_TextField, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_Button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(summarizer_Label, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jSeparator4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        knowledgeBase_Tab.addTab("Finalize/Summarize", jLayeredPane5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(knowledgeBase_Tab)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(knowledgeBase_Tab)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        notLoaded.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        noFile.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void MISC_OpenKnowledgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MISC_OpenKnowledgeActionPerformed
        try{File dir = new File("./knowledgeBase/");
        File dir2 = new File("./knowledgeBase/in/");
            if (!dir.exists()){dir.mkdir();}
            if (!dir2.exists()){dir2.mkdir();}
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(dir);
            }}catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_MISC_OpenKnowledgeActionPerformed

    private void summarizer_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summarizer_ButtonActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            chooseFile.setDialogTitle("Select File to Finalize...");

            //set the chooser for files only
            chooseFile.setFileSelectionMode(chooseFile.FILES_ONLY);
            //set the file chooser to select txt files only
            javax.swing.filechooser.FileNameExtensionFilter filter =
            new javax.swing.filechooser.FileNameExtensionFilter("*.txt", "txt", "text");
            chooseFile.setFileFilter(filter);
            int returnVal = chooseFile.showOpenDialog(chooseFile);
            if (returnVal == chooseFile.APPROVE_OPTION) {
                File file = chooseFile.getSelectedFile();
                String path = file.getAbsolutePath();
                summarizer_TextField.setText(file.getAbsolutePath());
            }

        }
        });
    }//GEN-LAST:event_summarizer_ButtonActionPerformed

    private void summarizer_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summarizer_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_summarizer_TextFieldActionPerformed

    private void summarizer_Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summarizer_Button2ActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            chooseFile.setDialogTitle("Save the result as...");
            summarizer_ProgressBar.setValue(0);
            if (summarizer_TextField.getText().equals("")){noFile.setVisible(true);}
            else{
                int userSelection = chooseFile.showSaveDialog(chooseFile);
                String pathTo = "";
                if (userSelection == chooseFile.APPROVE_OPTION) {
                    File fileToSave = chooseFile.getSelectedFile();
                    pathTo = fileToSave.getAbsolutePath();
                    if(!pathTo.contains(".")){pathTo = pathTo+".txt";}
                    //parse!
                    String pathFrom = summarizer_TextField.getText();
                    new parser().parseDoc(pathFrom, pathFrom+"_");

                    int howMany = Integer.parseInt(summarizer_Spinner.getValue().toString());

                    System.out.println(summarizer_TextField.getText());
                    System.out.println(pathTo);
                    System.out.println(howMany);

                    new Summarizer(pathFrom+"_",pathFrom+"_",pathTo,howMany);
                    new File(pathFrom+"_").delete();
                    summarizer_ProgressBar.setValue(100);
                    if (summarizer_CheckBox.isSelected()){ System.out.println("SELECTED");
                        try{
                            Desktop dt = Desktop.getDesktop();
                            dt.open(new File(pathTo));
                        }catch(Exception e){}
                    }
                }

            }
        }
        });
    }//GEN-LAST:event_summarizer_Button2ActionPerformed

    private void summarizer_CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summarizer_CheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_summarizer_CheckBoxActionPerformed

    private void finalize_CheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalize_CheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finalize_CheckBoxActionPerformed

    private void finalize_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalize_Button1ActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            chooseFile.setDialogTitle("Select File to Finalize...");
            if (new File("./knowledgeBase/in/parsed.txt").exists()!=true){
                notLoaded.setVisible(true);
            }
            else{
                //set the chooser for files only
                chooseFile.setFileSelectionMode(chooseFile.FILES_ONLY);
                //set the file chooser to select txt files only
                javax.swing.filechooser.FileNameExtensionFilter filter =
                new javax.swing.filechooser.FileNameExtensionFilter("*.txt", "txt", "text");
                chooseFile.setFileFilter(filter);
                int returnVal = chooseFile.showOpenDialog(chooseFile);
                if (returnVal == chooseFile.APPROVE_OPTION) {
                    File file = chooseFile.getSelectedFile();
                    String path = file.getAbsolutePath();
                    finalize_TextField.setText(file.getAbsolutePath());
                }

            }
        }
        });
    }//GEN-LAST:event_finalize_Button1ActionPerformed

    private void finalize_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalize_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_finalize_TextFieldActionPerformed

    private void finalize_Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalize_Button2ActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            chooseFile.setDialogTitle("Save the result as...");
            finalize_ProgressBar.setValue(0);
            if (finalize_TextField.getText().equals("")){noFile.setVisible(true);}
            else if (new File("./knowledgeBase/in/parsed.txt").exists()!=true){notLoaded.setVisible(true);}
            else{
                int userSelection = chooseFile.showSaveDialog(chooseFile);
                String pathTo = "";
                if (userSelection == chooseFile.APPROVE_OPTION) {
                    File fileToSave = chooseFile.getSelectedFile();
                    pathTo = fileToSave.getAbsolutePath();
                    if(!pathTo.contains(".")){pathTo = pathTo+".txt";}

                    int howMany = Integer.parseInt(finalize_Spinner.getValue().toString());
                    cs = new Summarizer(new TrainSummarizer("./knowledgeBase/in/parsed.txt"));
                    cs.summarize(finalize_TextField.getText(), pathTo, howMany);
                    finalize_ProgressBar.setValue(100);

                    try{
                        Desktop dt = Desktop.getDesktop();
                        dt.open(new File(pathTo));
                    }catch(Exception e){}

                }

            }
        }
        });
    }//GEN-LAST:event_finalize_Button2ActionPerformed

    private void filter_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_buttonActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            filter_progress.setValue(0);
            int howMany = Integer.parseInt(filter_Spinner.getValue().toString());
            ArrayList<String>files = new dirTool().getTXTFiles("./knowledgeBase/", false);
            int sizeOf = files.size();
            String[][] strArr = new String[sizeOf][2];
            //dbg: for (int t=0;t<files.size();t++){System.out.println(files.get(t));}
            //
            filter_progress.setValue(5);
            //
            Summarizer cs = new Summarizer(new TrainSummarizer("./knowledgeBase/in/parsed.txt"));
            for (int t=0;t<sizeOf;t++){
                cs.summarize(files.get(t), files.get(t)+"_", howMany);
                new File(files.get(t)).delete();
                new File(files.get(t)+"_").renameTo(new File(files.get(t)));
                double sz = ((double)t/(sizeOf)) *100;
                int position = (int)sz;
                filter_progress.setValue(position);
            }

            filter_progress.setValue(100);

        }
        });
    }//GEN-LAST:event_filter_buttonActionPerformed

    private void classifyData_Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyData_Button2ActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            classifyData_Progress2.setValue(0);
            int howMany = Integer.parseInt(classifyData_Spinner.getValue().toString()); //System.out.println(howMany);
            ArrayList<String>files = new dirTool().getTXTFiles("./knowledgeBase/", false);
            int sizeOf = files.size();
            String[][] strArr = new String[sizeOf][2];
            //dbg: for (int t=0;t<files.size();t++){System.out.println(files.get(t));}
            classifyData_Progress2.setValue(5);
            classify cl = new classify();
            for (int t=0;t<sizeOf;t++){
                double value = cl.classifyDocuments("./knowledgeBase/in/parsed.txt", files.get(t), 60);
                strArr[t][0]=""+value; strArr[t][1]=""+files.get(t);
                double sz = ((double)t/(sizeOf)) *100;
                int position = (int)sz;
                classifyData_Progress2.setValue(position);
            }

            sortFilesByClass sbc = new sortFilesByClass();
            strArr = sbc.sort2DArray(strArr);
            for (int t=(int)howMany;t<strArr.length;t++){
                new File(strArr[t][1]).delete();
            }

            classifyData_Progress2.setValue(100);

        }
        });
    }//GEN-LAST:event_classifyData_Button2ActionPerformed

    private void classifyData_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyData_Button1ActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            classifyData_Progress1.setValue(0);
            double tresh = (double)classifyData_Slider.getValue()/100;
            ArrayList<String>files = new dirTool().getTXTFiles("./knowledgeBase/", false);
            int sizeOf = files.size();
            //dbg: for (int t=0;t<files.size();t++){System.out.println(files.get(t));}
            classify cl = new classify();
            classifyData_Progress1.setValue(5);
            for (int t=0;t<sizeOf;t++){
                double value = cl.classifyDocuments("./knowledgeBase/in/parsed.txt", files.get(t), 60);
                //System.out.println(value+":"+files.get(t));
                if (value<tresh){new File(files.get(t)).delete();}
                double sz = ((double)t/(sizeOf-1)) *100;
                int position = (int)sz; //System.out.println(position);
                classifyData_Progress1.setValue(position);
            }

        }
        });
    }//GEN-LAST:event_classifyData_Button1ActionPerformed

    private void knowledgeBase_SelectSubDirsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knowledgeBase_SelectSubDirsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_knowledgeBase_SelectSubDirsActionPerformed

    private void knowledgeBase_ShowFilenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knowledgeBase_ShowFilenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_knowledgeBase_ShowFilenameActionPerformed

    private void knowledgeBase_SelectDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knowledgeBase_SelectDirButtonActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            //get the file progress bar value
            knowledgeBase_Progress.setValue(0);

            //set the chooser for directories only
            chooseFile.setFileSelectionMode(chooseFile.DIRECTORIES_ONLY);

            int returnVal = chooseFile.showOpenDialog(chooseFile);
            if (returnVal == chooseFile.APPROVE_OPTION) {
                File file = chooseFile.getSelectedFile();
                String path = file.getAbsolutePath();

                dirTool dt = new dirTool();
                boolean subs = knowledgeBase_SelectSubDirs.isSelected();
                ArrayList<String> filenames = dt.getTXTFiles(path, subs);

                double size = filenames.size(); //the size of array, for a progress bar

                //if temp directory does not exist, create it
                File dir = new File("./knowledgeBase/");
                if (!dir.exists()){dir.mkdirs(); dir = new File("./knowledgeBase/in/");
                    if (!dir.exists()){dir.mkdirs();}
                }

                //initiate the parser
                parser parse = new parser();//.parseDoc(path, "./knowledgeBase/in/parsed.txt");
                knowledgeBase_Progress.setValue(5);
                for (int t=0;t<(int)size;t++){
                    String absPath = filenames.get(t);
                    String filename = absPath.substring(absPath.lastIndexOf("\\")+1,absPath.length());
                        parse.parseDoc(absPath, "./knowledgeBase/"+filename);

                        //set the bar to a proper position
                        double sz = ((double)t/(size-1)) *100;
                        int position = (int)sz; //System.out.println(position);
                        knowledgeBase_Progress.setValue(position);
                    }
                }
            }
        });
    }//GEN-LAST:event_knowledgeBase_SelectDirButtonActionPerformed

    private void knowledgeBase_SelectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knowledgeBase_SelectFileButtonActionPerformed
        Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            
        File dir = new File("./knowledgeBase/");
        File dir2 = new File("./knowledgeBase/in/");
        if (!dir.exists()){dir.mkdir();}
        if (!dir2.exists()){dir2.mkdir();}
        
            //get the file progress bar value
            double pgv = knowledgeBase_fileProgress.getPercentComplete();
            //DBG: System.out.println(pgv);

            //set the file progress bar's state
            knowledgeBase_fileProgress.setValue(0);
            //set the chooser for files only
            chooseFile.setFileSelectionMode(chooseFile.FILES_ONLY);
            //set the file chooser to select txt files only
            javax.swing.filechooser.FileNameExtensionFilter filter =
            new javax.swing.filechooser.FileNameExtensionFilter("*.txt", "txt", "text");
            chooseFile.setFileFilter(filter);

            int returnVal = chooseFile.showOpenDialog(chooseFile);
            if (returnVal == chooseFile.APPROVE_OPTION) {

                //set the file progress bar's state

                File file = chooseFile.getSelectedFile();
                String path = file.getAbsolutePath();
                knowledgeBase_ShowFilename.setText(file.getAbsolutePath());
                cs = new Summarizer(new TrainSummarizer(path));
                //if temp directory does not exist, create it
                

                //parse the file
                new parser().parseDoc(path, "./knowledgeBase/in/parsed.txt");
                knowledgeBase_fileProgress.setValue(100);
            }

            else{if (pgv>0)knowledgeBase_fileProgress.setValue(100);}

        }
        });
    }//GEN-LAST:event_knowledgeBase_SelectFileButtonActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    DeleteAll.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    new dirTool().deleteDirectory((new File("./knowledgeBase/")));
    DeleteAll.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void expand_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expand_ButtonActionPerformed
        if (cs==null){
        cs = new Summarizer(new TrainSummarizer("./knowledgeBase/in/parsed.txt")); 
        }
        //count the number of sentences
        int numlines = new ReadLines().countLines("./knowledgeBase/in/parsed.txt");
        int count = 0;
        System.out.println(numlines);
        ReadForExpansion rfe = new ReadForExpansion("./knowledgeBase/in/parsed.txt");
        
        //get knowledge base dirs
        ArrayList<String> dir = new dirTool().getTXTFiles("./knowledgeBase/", false);
        
        Finder find = new Finder();
        
        double cutoff = ((double)expand_Slider.getValue()/100);
        System.out.println(cutoff);
        Metrics m = new Metrics();
        String[]s=rfe.getNextPair();
       while(s!=null && s[1]!=null){
        //do expansion!
 
 
          //get best sentences
         ArrayList<String> chosen = new ArrayList<String>();
         String expand =  cs.expand(s[0]);
         CompareSentences cs2 = new CompareSentences();
            for (int t=0;t<dir.size();t++){
                String fl = dir.get(t);
                //String beststr = find.findClosestFirstSentence(fl, s[0], cutoff, tts);
                String beststr = "";
                double max = 0;
                		try{
			BufferedReader br = new BufferedReader(new FileReader(fl));
			String line;
			while ( (line = br.readLine()) != null) {
                        String line2 =  cs.expand(line);
			double value = (double)cs2.getSimilarity(expand, line2)*cs2.getSimilarity(s[0], line);
			if (max<value && value>cutoff ){  
				max=value; 
				beststr=line;
                               // System.out.println(":"+sentence+"\n"+line+":"+value+"---");
				}
			}
			br.close();
                                }catch(Exception e){e.printStackTrace();}
                
                
               //double cmp = cs.getSimilarity(expand,tts.rangeToSentence(tts.sentenceToRange(beststr)))*cs.getSimilarity(s[0], beststr);
                if (!beststr.equals("")){  
                System.out.println(s[0]);
                System.out.println(beststr);
                System.out.println(max);
               // System.out.println(cmp);
               // System.out.println(new CompareSentences().getSimilarity(tts.rangeToSentence(tts.sentenceToRange(s[0])),tts.rangeToSentence(tts.sentenceToRange(beststr))));
                System.out.println("------------------------");    
                chosen.add(beststr+"<filename:"+fl+":>");
                }
            }
            /*if (chosen.size()>0 && s[0]!=null){
            String[]b = find.getBestSentence(chosen, s[0], tts);
            if (b[0]!=null && b[1]!=null){
            System.out.println(s[0]);
           // 
            System.out.println("*"+b[0]);
            //
            System.out.println(b[1]);
            System.out.println(new CompareSentences().getSimilarity(tts.rangeToSentence(tts.sentenceToRange(s[0])),tts.rangeToSentence(tts.sentenceToRange(b[0]))));
            System.out.println("------------------------");
            //String chunk = find.getParagraph(b[1], b[0], s[1], cutoff, 0);
            //System.out.println(chunk);
            }
            
            
            
            
            }*/
         count++;
         s=rfe.getNextPair();
        }
        
        if (s[0]!=null && s[1]==null){
        //write last
        System.out.println(s[0]);
        System.out.println(count);
        }
        
        rfe.close();
        
    }//GEN-LAST:event_expand_ButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
Executor executor = java.util.concurrent.Executors.newSingleThreadExecutor();
        ((ExecutorService) executor).submit(new Runnable() { public void run() {
            
        File dir = new File("./knowledgeBase/");
        if (!dir.exists()){dir.mkdir();}
        
 

            //set the file progress bar's state
            knowledgeBase_Progress.setValue(0);
            //set the chooser for files only
            chooseFile.setFileSelectionMode(chooseFile.FILES_ONLY);
            //set the file chooser to select txt files only
            javax.swing.filechooser.FileNameExtensionFilter filter =
            new javax.swing.filechooser.FileNameExtensionFilter("*.txt", "txt", "text");
            chooseFile.setFileFilter(filter);

            int returnVal = chooseFile.showOpenDialog(chooseFile);
            if (returnVal == chooseFile.APPROVE_OPTION) {

                //set the file progress bar's state

                File file = chooseFile.getSelectedFile();
                String path = file.getAbsolutePath();
                String fname = file.getName();

                //parse the file
                new parser().parseDoc(path, "./knowledgeBase/"+fname);
                knowledgeBase_Progress.setValue(100);
            }

           

        }
        });
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {try{
                MainJFrame Te3 = new MainJFrame();
                //java.net.URL imgURL = getClass().getResource("TE_m.png"); TODO
               // java.awt.Image img  = javax.imageio.ImageIO.read(imgURL); TODO
               // Te3.setIconImage(img); TODO
                //Te3.setResizable(false);
                Te3.setTitle("Text-Expander 3.0, Inverse Text Summarizer");
                Te3.setLocation(100, 50);
                
                Te3.setVisible(true);
            }catch(Exception e){e.printStackTrace();}}
        });
    }
    private Summarizer cs;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog DeleteAll;
    private javax.swing.JButton MISC_OpenKnowledge;
    private javax.swing.JFileChooser chooseFile;
    private javax.swing.JButton classifyData_Button1;
    private javax.swing.JButton classifyData_Button2;
    private javax.swing.JLabel classifyData_Label1;
    private javax.swing.JLabel classifyData_Label2;
    private javax.swing.JProgressBar classifyData_Progress1;
    private javax.swing.JProgressBar classifyData_Progress2;
    private javax.swing.JSlider classifyData_Slider;
    private javax.swing.JSpinner classifyData_Spinner;
    private javax.swing.JTextArea classifyData_TextArea;
    private javax.swing.JButton expand_Button;
    private javax.swing.JCheckBox expand_CheckBox;
    private javax.swing.JLabel expand_Label;
    private javax.swing.JLabel expand_Label2;
    private javax.swing.JProgressBar expand_ProgressBar;
    private javax.swing.JSlider expand_Slider;
    private javax.swing.JSpinner expand_Spinner;
    private javax.swing.JTextArea expand_TextArea;
    private javax.swing.JSpinner filter_Spinner;
    private javax.swing.JButton filter_button;
    private javax.swing.JLabel filter_label;
    private javax.swing.JProgressBar filter_progress;
    private javax.swing.JButton finalize_Button1;
    private javax.swing.JButton finalize_Button2;
    private javax.swing.JCheckBox finalize_CheckBox;
    private javax.swing.JLabel finalize_Label1;
    private javax.swing.JLabel finalize_Label2;
    private javax.swing.JProgressBar finalize_ProgressBar;
    private javax.swing.JSpinner finalize_Spinner;
    private javax.swing.JTextArea finalize_TextArea;
    private javax.swing.JTextField finalize_TextField;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JProgressBar knowledgeBase_Progress;
    private javax.swing.JButton knowledgeBase_SelectDirButton;
    private javax.swing.JButton knowledgeBase_SelectFileButton;
    private javax.swing.JCheckBox knowledgeBase_SelectSubDirs;
    private javax.swing.JTextField knowledgeBase_ShowFilename;
    private javax.swing.JTabbedPane knowledgeBase_Tab;
    private javax.swing.JTextArea knowledgeBase_TextArea;
    private javax.swing.JLabel knowledgeBase_TextLabel1;
    private javax.swing.JLabel knowledgeBase_TextLabel2;
    private javax.swing.JLabel knowledgeBase_TextLabel3;
    private javax.swing.JProgressBar knowledgeBase_fileProgress;
    private javax.swing.JDialog noFile;
    private javax.swing.JDialog notLoaded;
    private javax.swing.JButton summarizer_Button;
    private javax.swing.JButton summarizer_Button2;
    private javax.swing.JCheckBox summarizer_CheckBox;
    private javax.swing.JLabel summarizer_Label;
    private javax.swing.JProgressBar summarizer_ProgressBar;
    private javax.swing.JSpinner summarizer_Spinner;
    private javax.swing.JTextField summarizer_TextField;
    // End of variables declaration//GEN-END:variables
}
